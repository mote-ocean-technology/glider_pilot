// Generated by CoffeeScript 1.6.3
(function() {
  var $, DATABASE, app, express, fetchComments, makeClient, mysql, postComments;

  express = require("express");

  app = express();

  $ = require('jquery');

  mysql = require('mysql');

  DATABASE = 'SCOPE';

  makeClient = function() {
    var client;
    client = mysql.createConnection({
      host: "localhost",
      user: "root",
      password: "s0c00l2014!",
      database: "SCOPE",
      insecureAuth: "true"
    });
    return client;
  };

  fetchComments = function(req, res) {
    var TABLE, client, records, selectCb;
    client = makeClient();
    TABLE = 'pilotLog';
    records = [];
    client.query("use " + DATABASE);
    return client.query("SELECT id,from_unixtime(epochtime) as epochtime,vehicle,pilot,category,logentry FROM pilotLog ORDER BY epochtime DESC", selectCb = function(err, results, fields) {
      var id, index, _i, _len;
      if (!err) {
        index = 0;
        for (_i = 0, _len = results.length; _i < _len; _i++) {
          id = results[_i];
          records.push({
            epochtime: results[index].epochtime,
            vehicle: results[index].vehicle,
            pilot: results[index].pilot,
            category: results[index].category,
            logentry: results[index].logentry
          });
          index++;
        }
      }
      res.render("gp", {
        title: "SO COOL AUV Mission Logbook",
        records: records
      });
      return client.end();
    });
  };

  postComments = function(req, res, vehicle, pilot, category, logEntry) {
    var client, epoch, myQuery, theDate;
    logEntry = logEntry.replace(/'/g, "");
    logEntry = logEntry.replace(/"/g, "");
    console.log(logEntry);
    client = makeClient();
    theDate = new Date();
    epoch = theDate.getTime() / 1000;
    client.query("use SCOPE");
    myQuery = "INSERT INTO pilotLog VALUES(DEFAULT," + "'" + epoch + "'," + "'" + vehicle + "'," + "'" + pilot + "'," + "'" + category + "'," + "'" + logEntry + "'" + ")";
    client.query(myQuery);
    return client.end();
  };

  app.configure(function() {
    app.set("views", __dirname + "/views");
    app.set("view engine", "jade");
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(app.router);
    return app.use(express["static"](__dirname + "/public"));
  });

  app.configure("development", function() {
    return app.use(express.errorHandler({
      dumpExceptions: true,
      showStack: true
    }));
  });

  app.configure("production", function() {
    return app.use(express.errorHandler());
  });

  app.get("/", function(req, res) {
    return fetchComments(req, res);
  });

  app.post("/", function(req, res) {
    postComments(req, res, req.body.vehicle, req.body.pilot, req.body.category, req.body.logEntry);
    return res.redirect('back');
  });

  app.listen(5001);

  console.log("Express server listening on port 5001 mode", app.settings.env);

}).call(this);
